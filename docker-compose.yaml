x-airflow-common:
  &airflow-common
  build:
    context: .
    dockerfile: Dockerfile
  image: custom-airflow:latest
  environment:
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__CORE__FERNET_KEY: 'Fsahx6SmvAw_fmrhvV1X0cMKoxKYMaBXWvSsggXoKH4='
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'false'
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    AIRFLOW__WEBSERVER__DEFAULT_UI_TIMEZONE: Asia/Ho_Chi_Minh
    AIRFLOW__WEBSERVER__SECRET_KEY: 'mgofnMrR1vtliiHEzlVSuUioqxpXH6sBFt_OAMhaZuc'
    AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
    AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
    AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION}
    PYTHONPATH: /opt/airflow
  volumes:
    - ./dags:/opt/airflow/dags
    - ./configs:/opt/airflow/configs
    - ./scripts:/opt/airflow/scripts
    - ./spark_jobs:/opt/airflow/spark_jobs
    - ./utils:/opt/airflow/utils
    - ./data:/opt/airflow/data
    - ./requirements.txt:/requirements.txt
  depends_on:
    - postgres
  user: "${AIRFLOW_UID:-50000}:0"

services:
  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data

  airflow-webserver:
    <<: *airflow-common
    container_name: airflow-webserver
    command: webserver
    ports:
      - 8080:8080
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8080/health || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 5

  airflow-scheduler:
    <<: *airflow-common
    container_name: airflow-scheduler
    command: scheduler

  airflow-init:
    <<: *airflow-common
    container_name: airflow-init
    entrypoint: /bin/bash
    command: >
      -c "airflow db migrate &&
          airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com"


volumes:
  postgres-db-volume:
